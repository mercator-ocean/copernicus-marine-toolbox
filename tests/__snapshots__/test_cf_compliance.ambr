# serializer version: 1
# name: TestCFCompliance.test_subset_open
  list([
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.1 Filename',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.2 Data Types',
      'value': list([
        5,
        5,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.3 Naming Conventions',
      'value': list([
        48,
        48,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.4 Dimensions',
      'value': list([
        5,
        5,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.4 Dimensions',
      'value': list([
        5,
        5,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
        "Attribute 'valid_min' (type: <class 'numpy.float64'>) and parent variable 'pico' (type: <class 'numpy.float32'>) must have equivalent datatypes",
        "Attribute 'valid_max' (type: <class 'numpy.float64'>) and parent variable 'pico' (type: <class 'numpy.float32'>) must have equivalent datatypes",
      ]),
      'name': '§2.5 Variables',
      'value': list([
        4,
        6,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.6 Attributes',
      'value': list([
        6,
        6,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§3.1 Units',
      'value': list([
        5,
        5,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§3.1 Units',
      'value': list([
        30,
        30,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§3.3 Standard Name',
      'value': list([
        20,
        20,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4 Coordinate Types',
      'value': list([
        8,
        8,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.1 Latitude Coordinate',
      'value': list([
        2,
        2,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.1 Latitude Coordinate',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.2 Longitude Coordinate',
      'value': list([
        2,
        2,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.2 Longitude Coordinate',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.3 Vertical Coordinate',
      'value': list([
        2,
        2,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.4 Time Coordinate',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§5 Coordinate Systems',
      'value': list([
        8,
        8,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§5.6 Horizontal Coordinate Reference Systems, Grid Mappings, Projections',
      'value': list([
        2,
        2,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§8.1 Packed Data',
      'value': list([
        1,
        1,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§9.1 Dataset contains a valid featureType',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
  ])
# ---
# name: TestCFCompliance.test_subset_open.1
  list([
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.1 Filename',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.2 Data Types',
      'value': list([
        5,
        5,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.4 Dimensions',
      'value': list([
        5,
        5,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§3.1 Units',
      'value': list([
        30,
        30,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§3.3 Standard Name',
      'value': list([
        20,
        20,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4 Coordinate Types',
      'value': list([
        8,
        8,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.1 Latitude Coordinate',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.2 Longitude Coordinate',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.3 Vertical Coordinate',
      'value': list([
        2,
        2,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.4 Time Coordinate',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§5 Coordinate Systems',
      'value': list([
        8,
        8,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§5.6 Horizontal Coordinate Reference Systems, Grid Mappings, Projections',
      'value': list([
        2,
        2,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§9.1 Dataset contains a valid featureType',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
  ])
# ---
# name: TestCFCompliance.test_subset_with_warns
  list([
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.1 Filename',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.2 Data Types',
      'value': list([
        4,
        4,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.3 Naming Conventions',
      'value': list([
        40,
        40,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.4 Dimensions',
      'value': list([
        4,
        4,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.4 Dimensions',
      'value': list([
        4,
        4,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
        "Attribute 'valid_min' (type: <class 'numpy.int64'>) and parent variable 'adjusted_sea_surface_temperature' (type: <class 'numpy.int16'>) must have equivalent datatypes",
        "Attribute 'valid_max' (type: <class 'numpy.int64'>) and parent variable 'adjusted_sea_surface_temperature' (type: <class 'numpy.int16'>) must have equivalent datatypes",
      ]),
      'name': '§2.5 Variables',
      'value': list([
        3,
        5,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
        '§2.6.1 Conventions global attribute does not contain "CF-1.7"',
      ]),
      'name': '§2.6 Attributes',
      'value': list([
        6,
        7,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§3.1 Units',
      'value': list([
        4,
        4,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§3.1 Units',
      'value': list([
        24,
        24,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§3.3 Standard Name',
      'value': list([
        16,
        16,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4 Coordinate Types',
      'value': list([
        6,
        6,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.1 Latitude Coordinate',
      'value': list([
        2,
        2,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.1 Latitude Coordinate',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.2 Longitude Coordinate',
      'value': list([
        2,
        2,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.2 Longitude Coordinate',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.4 Time Coordinate',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§5 Coordinate Systems',
      'value': list([
        6,
        6,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§5.6 Horizontal Coordinate Reference Systems, Grid Mappings, Projections',
      'value': list([
        2,
        2,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
        'Type of adjusted_sea_surface_temperaturevalid_min attribute (int64) does not match variable type (int16)',
        'Type of adjusted_sea_surface_temperature:valid_max attribute (int64) does not match variable type (int16)',
      ]),
      'name': '§8.1 Packed Data',
      'value': list([
        4,
        5,
      ]),
      'weight': 2,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§9.1 Dataset contains a valid featureType',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
  ])
# ---
# name: TestCFCompliance.test_subset_with_warns.1
  list([
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.1 Filename',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.2 Data Types',
      'value': list([
        4,
        4,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§2.4 Dimensions',
      'value': list([
        4,
        4,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§3.1 Units',
      'value': list([
        24,
        24,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§3.3 Standard Name',
      'value': list([
        16,
        16,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4 Coordinate Types',
      'value': list([
        6,
        6,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.1 Latitude Coordinate',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.2 Longitude Coordinate',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§4.4 Time Coordinate',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§5 Coordinate Systems',
      'value': list([
        6,
        6,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§5.6 Horizontal Coordinate Reference Systems, Grid Mappings, Projections',
      'value': list([
        2,
        2,
      ]),
      'weight': 3,
    }),
    dict({
      'children': list([
      ]),
      'msgs': list([
      ]),
      'name': '§9.1 Dataset contains a valid featureType',
      'value': list([
        1,
        1,
      ]),
      'weight': 3,
    }),
  ])
# ---
