name: Run tests binaries

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "release/**"
      - "pre-releases/**"
  pull_request: # for the moment, to test that it works.
    branches:
      - "main"



jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-22.04, macos-13, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: mamba-org/setup-micromamba@v1
      with:
        micromamba-version: '1.5.6-0'
        micromamba-binary-path: ${{ runner.temp }}/bin/micromamba
        environment-file: conda_environment_binary.yaml
        environment-name: copernicusmarine-binary
        condarc-file: .condarc
        cache-environment: true
        post-cleanup: 'all'

    - name: Build with PyInstaller
      shell: micromamba-shell {0}
      run: |
        make run-using-pyinstaller-${{ matrix.os }}

    - name: Standarise name to make the tests easy
      shell: micromamba-shell {0}
      env:
        GITHUB_ENV: $GITHUB_ENV
      run: |
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          echo "ARCH=macos-arm64" >> $GITHUB_ENV
          NAME="macos-arm64"
        elif [ "${{ matrix.os }}" == "macos-13" ]; then
          echo "ARCH=macos-x86_64" >> $GITHUB_ENV
          NAME="macos-x86_64" >> $GITHUB_ENV
        elif [ "${{ matrix.os }}" == "ubuntu-22.04" ]; then
          echo "ARCH=linux-glibc-2.35" >> $GITHUB_ENV
          NAME="linux-glibc-2.35" >> $GITHUB_ENV
        elif [ "${{ matrix.os }}" == "ubuntu-20.04" ]; then
          echo "ARCH=linux-glibc-2.31" >> $GITHUB_ENV
          NAME="linux-glibc-2.31"
        fi
          echo "NAME"
          echo "ARCH"
          echo "$NAME"
          echo "$ARCH"
          echo "$$NAME"
          echo "$$ARCH"
          echo "$${NAME}"
          echo "${NAME}"
          mv dist/copernicusmarine_$$NAME.cli ./copernicusmarine.cli

    - name: Run tests
      env:
        COPERNICUSMARINE_SERVICE_USERNAME: ${{ secrets.COPERNICUSMARINE_SERVICE_USERNAME }}
        COPERNICUSMARINE_SERVICE_PASSWORD: ${{ secrets.COPERNICUSMARINE_SERVICE_PASSWORD }}
      run: make run-tests-binaries
      shell: micromamba-shell {0}
