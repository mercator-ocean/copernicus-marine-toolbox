name: Create Binaries

on:
  push:
    branches:
       - main
       - 'pre-releases/**'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest, macos-13]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      id: set-version
      run: |
        make build-and-prepare-for-binary


    - name: Build with PyInstaller
      run: |
        make run-using-pyinstaller-${{ matrix.os }}

    - name: Upload binaries to windows
      env:
        GH_TOKEN: ${{ github.token }}
      if: matrix.os == 'windows-latest'
      run: |
          $WIN_VERSION = poetry version --short
          gh release upload v$WIN_VERSION dist/copernicusmarine.exe#copernicusmarine-binary-windows-for-v$WIN_VERSION
    - name: Upload binaries to macos or ubuntu
      env:
        GH_TOKEN: ${{ github.token }}
      if: matrix.os != 'windows-latest'
      run: |
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          ARCH="macos-arm64"
        elif [ "${{ matrix.os }}" == "macos-13" ]; then
          ARCH="macos-x86_64"
        elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          ARCH="linux"
        fi
          gh release upload v${{steps.set-version.outputs.VERSION}} dist/copernicusmarine_${ARCH}.cli#copernicusmarine-binary-${ARCH}-for-v${{steps.set-version.outputs.VERSION}}
