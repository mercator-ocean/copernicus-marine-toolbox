name: Run tests

on:
  pull_request_target:
    branches:
      - "main"
      - "release/**"
      - "pre-releases/**"
  push:
    branches:
      - "main"


jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        coverage: [with-coverage, fast-and-without-coverage]
    runs-on: self-hosted
    timeout-minutes: 30
    env:
      ACTIONS_STEP_DEBUG: true
      HOME: /home/github-runner

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
            python-version: '3.13'
      - name: Install and configure Poetry
        run: |
          python3.13 -m pip install poetry
          python3.13 -m poetry config virtualenvs.in-project true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: |
          sudo apt install build-essential -y
          python3.13 -m poetry install --no-interaction --no-root
      - name: Install ncdump dependency
        run: sudo apt-get install netcdf-bin
      - name: Install library
        run: python3.13 -m poetry install --no-interaction --with dev
      - name: Run tests
        env:
          COPERNICUSMARINE_SERVICE_USERNAME: ${{ secrets.COPERNICUSMARINE_SERVICE_USERNAME }}
          COPERNICUSMARINE_SERVICE_PASSWORD: ${{ secrets.COPERNICUSMARINE_SERVICE_PASSWORD }}
        run: |
          if [ "${{ matrix.coverage}}" == "fast-and-without-coverage" ]; then
            python3.13 -m poetry run make run-quick-tests
          else
            python3.13 -m poetry run make run-cov-tests
          fi
      - name: Upload coverage reports to Codecov
        if: matrix.coverage == 'with-coverage'
        uses: codecov/codecov-action@v5
        env:
          COPERNICUSMARINE_SERVICE_USERNAME: ${{ secrets.COPERNICUSMARINE_SERVICE_USERNAME }}
          COPERNICUSMARINE_SERVICE_PASSWORD: ${{ secrets.COPERNICUSMARINE_SERVICE_PASSWORD }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
